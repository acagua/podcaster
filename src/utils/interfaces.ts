export interface Entry {
  "im:name": IMName;
  "im:image": IMImage[];
  summary: IMName;
  "im:price": IMPrice;
  "im:contentType": IMContentType;
  rights: IMName;
  title: IMName;
  link: Link;
  id: ID;
  "im:artist": IMArtist;
  category: Category;
  "im:releaseDate": IMReleaseDate;
}

interface Category {
  attributes: CategoryAttributes;
}

interface CategoryAttributes {
  "im:id": string;
  term: string;
  scheme: string;
  label: string;
}

interface ID {
  label: string;
  attributes: IDAttributes;
}

interface IDAttributes {
  "im:id": string;
}

interface IMArtist {
  label: string;
  attributes: IMArtistAttributes;
}

interface IMArtistAttributes {
  href: string;
}

interface IMContentType {
  attributes: IMContentTypeAttributes;
}

interface IMContentTypeAttributes {
  term: string;
  label: string;
}

interface IMImage {
  label: string;
  attributes: IMImageAttributes;
}

interface IMImageAttributes {
  height: string;
}

interface IMName {
  label: string;
}

interface IMPrice {
  label: string;
  attributes: IMPriceAttributes;
}

interface IMPriceAttributes {
  amount: string;
  currency: string;
}

interface IMReleaseDate {
  label: string;
  attributes: IMName;
}

interface Link {
  attributes: LinkAttributes;
}

interface LinkAttributes {
  rel: string;
  type: string;
  href: string;
}

//Episode Details
// Generated by https://quicktype.io

export interface PodcastDetails {
  resultCount: number;
  results: Episode[];
}

export interface Episode {
  wrapperType: string;
  kind: string;
  artistId?: number;
  collectionId: number;
  trackId: number;
  artistName?: string;
  collectionName: string;
  trackName: string;
  collectionCensoredName?: string;
  trackCensoredName?: string;
  artistViewUrl: string;
  collectionViewUrl: string;
  feedUrl: string;
  trackViewUrl: string;
  artworkUrl30?: string;
  artworkUrl60: string;
  artworkUrl100?: string;
  collectionPrice?: number;
  trackPrice?: number;
  collectionHdPrice?: number;
  releaseDate: string;
  collectionExplicitness?: string;
  trackExplicitness?: string;
  trackCount?: number;
  trackTimeMillis: number;
  country: string;
  currency?: string;
  primaryGenreName?: string;
  contentAdvisoryRating: string;
  artworkUrl600: string;
  genreIds?: string[];
  genres: Array<GenreClass | string>;
  artistIds?: number[];
  episodeGuid?: string;
  description?: string;
  closedCaptioning?: string;
  shortDescription?: string;
  episodeUrl?: string;
  previewUrl?: string;
  episodeFileExtension?: string;
  artworkUrl160?: string;
  episodeContentType?: string;
}

export interface GenreClass {
  name: string;
  id: string;
}
